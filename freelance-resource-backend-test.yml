server:
  port: 8081
spring:
  config:
    activate:
      on-profile: test
  application:
    name: freelance-resource-backend
  cloud:
    config:
      enabled: true
    bus:
      enabled: true
  datasource:
    url: "jdbc:mysql://${DATABASE_HOST:localhost}:${DATABASE_PORT:3306}/${DATABASE_NAME:user}"
    username: root
    password: root
  jpa:
    show-sql: true
  security:
    oauth2:
      client:
        registration:
          freelance-resource-backend:
            client-id: "${CLIENT_ID}"
            client-secret: "${CLIENT_SECRET}"
            scope: USER_MANAGEMENT_SERVER
            authorization-grant-type: client_credentials
        provider:
          freelance-resource-backend:
            token-uri: "${TOKEN_URI:http://localhost:9000/oauth2/token}"
      resourceserver:
        jwt:
          jwk-set-uri: "${JWK_SET_URI:http://localhost:9000/oauth2/jwks}"
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
        defaultZone: http://localhost:8761/eureka/

management:
  health:
    rabbit:
      enabled: true
  info:
    env:
      enabled: true
  endpoint:
    shutdown:
      access: unrestricted
  endpoints:
    web:
      exposure:
        include: "*"
info:
  app:
    name: freelance-resource-backend
    description: "Freelance Resource Backend Service"
    version: "1.0.0"
app:
  version: "1.0"

accounts:
  message: "test message TEST"
  details:
    name: "Kuan"
    email: "test@example.com"
  support:
    - 123456789
    - 987654321
logging:
  level:
    org.springframework.security: DEBUG
  pattern:
    console: "%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n"